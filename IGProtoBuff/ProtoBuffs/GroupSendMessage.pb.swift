// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: GroupSendMessage.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct IGPGroupSendMessage: SwiftProtobuf.Message {
  public static let protoMessageName: String = "IGPGroupSendMessage"

  public var igpRequest: IGPRequest {
    get {return _storage._igpRequest ?? IGPRequest()}
    set {_uniqueStorage()._igpRequest = newValue}
  }
  /// Returns true if `igpRequest` has been explicitly set.
  public var hasIgpRequest: Bool {return _storage._igpRequest != nil}
  /// Clears the value of `igpRequest`. Subsequent reads from it will return its default value.
  public mutating func clearIgpRequest() {_storage._igpRequest = nil}

  public var igpMessageType: IGPRoomMessageType {
    get {return _storage._igpMessageType}
    set {_uniqueStorage()._igpMessageType = newValue}
  }

  public var igpRoomID: Int64 {
    get {return _storage._igpRoomID}
    set {_uniqueStorage()._igpRoomID = newValue}
  }

  public var igpMessage: String {
    get {return _storage._igpMessage}
    set {_uniqueStorage()._igpMessage = newValue}
  }

  public var igpAttachment: String {
    get {return _storage._igpAttachment}
    set {_uniqueStorage()._igpAttachment = newValue}
  }

  public var igpLocation: IGPRoomMessageLocation {
    get {return _storage._igpLocation ?? IGPRoomMessageLocation()}
    set {_uniqueStorage()._igpLocation = newValue}
  }
  /// Returns true if `igpLocation` has been explicitly set.
  public var hasIgpLocation: Bool {return _storage._igpLocation != nil}
  /// Clears the value of `igpLocation`. Subsequent reads from it will return its default value.
  public mutating func clearIgpLocation() {_storage._igpLocation = nil}

  public var igpContact: IGPRoomMessageContact {
    get {return _storage._igpContact ?? IGPRoomMessageContact()}
    set {_uniqueStorage()._igpContact = newValue}
  }
  /// Returns true if `igpContact` has been explicitly set.
  public var hasIgpContact: Bool {return _storage._igpContact != nil}
  /// Clears the value of `igpContact`. Subsequent reads from it will return its default value.
  public mutating func clearIgpContact() {_storage._igpContact = nil}

  public var igpReplyTo: Int64 {
    get {return _storage._igpReplyTo}
    set {_uniqueStorage()._igpReplyTo = newValue}
  }

  public var igpForwardFrom: IGPRoomMessageForwardFrom {
    get {return _storage._igpForwardFrom ?? IGPRoomMessageForwardFrom()}
    set {_uniqueStorage()._igpForwardFrom = newValue}
  }
  /// Returns true if `igpForwardFrom` has been explicitly set.
  public var hasIgpForwardFrom: Bool {return _storage._igpForwardFrom != nil}
  /// Clears the value of `igpForwardFrom`. Subsequent reads from it will return its default value.
  public mutating func clearIgpForwardFrom() {_storage._igpForwardFrom = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._igpRequest)
        case 2: try decoder.decodeSingularEnumField(value: &_storage._igpMessageType)
        case 3: try decoder.decodeSingularInt64Field(value: &_storage._igpRoomID)
        case 4: try decoder.decodeSingularStringField(value: &_storage._igpMessage)
        case 5: try decoder.decodeSingularStringField(value: &_storage._igpAttachment)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._igpLocation)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._igpContact)
        case 8: try decoder.decodeSingularInt64Field(value: &_storage._igpReplyTo)
        case 9: try decoder.decodeSingularMessageField(value: &_storage._igpForwardFrom)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._igpRequest {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _storage._igpMessageType != .text {
        try visitor.visitSingularEnumField(value: _storage._igpMessageType, fieldNumber: 2)
      }
      if _storage._igpRoomID != 0 {
        try visitor.visitSingularInt64Field(value: _storage._igpRoomID, fieldNumber: 3)
      }
      if !_storage._igpMessage.isEmpty {
        try visitor.visitSingularStringField(value: _storage._igpMessage, fieldNumber: 4)
      }
      if !_storage._igpAttachment.isEmpty {
        try visitor.visitSingularStringField(value: _storage._igpAttachment, fieldNumber: 5)
      }
      if let v = _storage._igpLocation {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._igpContact {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if _storage._igpReplyTo != 0 {
        try visitor.visitSingularInt64Field(value: _storage._igpReplyTo, fieldNumber: 8)
      }
      if let v = _storage._igpForwardFrom {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct IGPGroupSendMessageResponse: SwiftProtobuf.Message {
  public static let protoMessageName: String = "IGPGroupSendMessageResponse"

  public var igpResponse: IGPResponse {
    get {return _storage._igpResponse ?? IGPResponse()}
    set {_uniqueStorage()._igpResponse = newValue}
  }
  /// Returns true if `igpResponse` has been explicitly set.
  public var hasIgpResponse: Bool {return _storage._igpResponse != nil}
  /// Clears the value of `igpResponse`. Subsequent reads from it will return its default value.
  public mutating func clearIgpResponse() {_storage._igpResponse = nil}

  public var igpRoomID: Int64 {
    get {return _storage._igpRoomID}
    set {_uniqueStorage()._igpRoomID = newValue}
  }

  public var igpRoomMessage: IGPRoomMessage {
    get {return _storage._igpRoomMessage ?? IGPRoomMessage()}
    set {_uniqueStorage()._igpRoomMessage = newValue}
  }
  /// Returns true if `igpRoomMessage` has been explicitly set.
  public var hasIgpRoomMessage: Bool {return _storage._igpRoomMessage != nil}
  /// Clears the value of `igpRoomMessage`. Subsequent reads from it will return its default value.
  public mutating func clearIgpRoomMessage() {_storage._igpRoomMessage = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._igpResponse)
        case 2: try decoder.decodeSingularInt64Field(value: &_storage._igpRoomID)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._igpRoomMessage)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._igpResponse {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if _storage._igpRoomID != 0 {
        try visitor.visitSingularInt64Field(value: _storage._igpRoomID, fieldNumber: 2)
      }
      if let v = _storage._igpRoomMessage {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension IGPGroupSendMessage: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "IGP_request"),
    2: .standard(proto: "IGP_message_type"),
    3: .standard(proto: "IGP_room_id"),
    4: .standard(proto: "IGP_message"),
    5: .standard(proto: "IGP_attachment"),
    6: .standard(proto: "IGP_location"),
    7: .standard(proto: "IGP_contact"),
    8: .standard(proto: "IGP_reply_to"),
    9: .standard(proto: "IGP_forward_from"),
  ]

  fileprivate class _StorageClass {
    var _igpRequest: IGPRequest? = nil
    var _igpMessageType: IGPRoomMessageType = .text
    var _igpRoomID: Int64 = 0
    var _igpMessage: String = String()
    var _igpAttachment: String = String()
    var _igpLocation: IGPRoomMessageLocation? = nil
    var _igpContact: IGPRoomMessageContact? = nil
    var _igpReplyTo: Int64 = 0
    var _igpForwardFrom: IGPRoomMessageForwardFrom? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _igpRequest = source._igpRequest
      _igpMessageType = source._igpMessageType
      _igpRoomID = source._igpRoomID
      _igpMessage = source._igpMessage
      _igpAttachment = source._igpAttachment
      _igpLocation = source._igpLocation
      _igpContact = source._igpContact
      _igpReplyTo = source._igpReplyTo
      _igpForwardFrom = source._igpForwardFrom
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: IGPGroupSendMessage) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._igpRequest != other_storage._igpRequest {return false}
        if _storage._igpMessageType != other_storage._igpMessageType {return false}
        if _storage._igpRoomID != other_storage._igpRoomID {return false}
        if _storage._igpMessage != other_storage._igpMessage {return false}
        if _storage._igpAttachment != other_storage._igpAttachment {return false}
        if _storage._igpLocation != other_storage._igpLocation {return false}
        if _storage._igpContact != other_storage._igpContact {return false}
        if _storage._igpReplyTo != other_storage._igpReplyTo {return false}
        if _storage._igpForwardFrom != other_storage._igpForwardFrom {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension IGPGroupSendMessageResponse: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "IGP_response"),
    2: .standard(proto: "IGP_room_id"),
    3: .standard(proto: "IGP_room_message"),
  ]

  fileprivate class _StorageClass {
    var _igpResponse: IGPResponse? = nil
    var _igpRoomID: Int64 = 0
    var _igpRoomMessage: IGPRoomMessage? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _igpResponse = source._igpResponse
      _igpRoomID = source._igpRoomID
      _igpRoomMessage = source._igpRoomMessage
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: IGPGroupSendMessageResponse) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._igpResponse != other_storage._igpResponse {return false}
        if _storage._igpRoomID != other_storage._igpRoomID {return false}
        if _storage._igpRoomMessage != other_storage._igpRoomMessage {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
